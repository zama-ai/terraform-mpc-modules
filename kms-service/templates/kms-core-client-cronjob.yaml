{{- if .Values.kmsCoreClientTesting.enabled }}
{{- $kmsCoreName := include "kmsCoreName" . }}
{{- $peersIDList := untilStep (default 1 .Values.kmsPeers.id | int) (.Values.kmsPeers.count | add1 | int) 1  }}
apiVersion: batch/v1
kind: CronJob
metadata:
  labels:
    app: kms-core-client-testing
    app.kubernetes.io/name: {{ include "kmsCoreClientTestingName" . }}
  name: {{ include "kmsCoreClientTestingName" . }}
spec:
  schedule: {{ .Values.kmsCoreClientTesting.schedule | quote }}
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: Never
          securityContext:
            {{- toYaml .Values.podSecurityContext | nindent 12 }}
          containers:
          - name: kms-core-client
            image: {{ .Values.kmsCoreClient.image.name }}:{{ .Values.kmsCoreClient.image.tag }}
            env:
              {{ if .Values.minio.enabled }}
              - name: S3_ENDPOINT
                value: "http://minio:9000/{{ .Values.kmsCore.publicVault.s3.bucket }}/{{ .Values.kmsCore.publicVault.s3.path }}"
              {{ else }}
              - name: S3_ENDPOINT
                value: "https://{{ .Values.kmsCore.publicVault.s3.bucket }}.s3.{{ .Values.kmsCore.aws.region }}.amazonaws.com{{ if .Values.kmsCore.publicVault.s3.path }}/{{ .Values.kmsCore.publicVault.s3.path }}{{ end }}"
              {{ end }}
              - name: OBJECT_FOLDER
                {{- if .Values.kmsCore.thresholdMode.peersList }}
                value: '[{{ if .Values.kmsCore.thresholdMode.enabled }}{{ range $i, $peer := .Values.kmsCore.thresholdMode.peersList }}{{- if $i -}},{{ end }}"PUB-p{{- $peer.id -}}"{{- end }}{{ else }}"PUB"{{ end }}]'
                {{- else }}
                value: '[{{ if .Values.kmsCore.thresholdMode.enabled }}{{ range $i := $peersIDList }}{{- if (sub $i 1) -}},{{ end }}"PUB-p{{- printf "%d" $i -}}"{{- end }}{{ else }}"PUB"{{ end }}]'
                {{- end }}
              - name: CORE_ADDRESSES
              {{- if .Values.kmsCore.thresholdMode.peersList }}
                value: '[{{ range $i, $peer := .Values.kmsCore.thresholdMode.peersList }}{{- if $i -}},{{ end }}"http://{{- $peer.host }}:{{- $.Values.kmsCore.ports.client -}}"{{- end }}]'
              {{ else }}
                value: '[{{ range $i := $peersIDList }}{{- if (sub $i 1) -}},{{ end }}"http://{{- printf "%s-%d" $kmsCoreName $i }}:{{- $.Values.kmsCore.ports.client -}}"{{- end }}]'
              {{- end }}
              - name: NUM_MAJORITY
                value: '{{ .Values.kmsCoreClient.num_majority | int }}'
              - name: NUM_RECONSTRUCT
                value: '{{ .Values.kmsCoreClient.num_reconstruct | int }}'
              - name: DECRYPTION_MODE
                value: '{{ .Values.kmsCoreClient.decryption_mode | quote }}'
              - name: FHE_PARAMETER
                value: '{{ .Values.kmsCoreClient.fhe_parameter | quote }}'
            command:
              - /app/load-core-client-testing-config.sh
            envFrom:
              - configMapRef:
                  name: {{ .Values.kmsCoreClient.envFrom.configmap.name }}
            volumeMounts:
              - mountPath: /app/load-core-client-testing-config.sh
                subPath: load-core-client-testing-config.sh
                name: config
              - name: key-files
                mountPath: /app/key-files
            resources:
              requests:
                memory: {{ .Values.kmsCoreClientTesting.resources.requests.memory }}
                cpu: {{ .Values.kmsCoreClientTesting.resources.requests.cpu }}
              limits:
                memory: {{ .Values.kmsCoreClientTesting.resources.limits.memory }}
                cpu: {{ .Values.kmsCoreClientTesting.resources.limits.cpu }}
          imagePullSecrets:
            - name: registry-credentials
          volumes:
            - name: config
              configMap:
                name: {{ include "kmsCoreClientName" . }}-config
                defaultMode: 0777
                items:
                  - key: load-core-client-testing-config.sh
                    path: load-core-client-testing-config.sh
            - name: key-files
              persistentVolumeClaim:
                claimName: {{ include "kmsCoreClientTestingName" . }}-pvc
          {{- with .Values.kmsCoreClient.nodeSelector }}
          nodeSelector:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.kmsCoreClient.affinity }}
          affinity:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.kmsCoreClient.tolerations }}
          tolerations:
            {{- toYaml . | nindent 12 }}
          {{- end }}
{{- end }}

---
{{- if .Values.kmsCoreClientTesting.enabled }}
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ include "kmsCoreClientTestingName" . }}-pvc
  labels:
    app: kms-core-client-testing
    app.kubernetes.io/name: {{ include "kmsCoreClientTestingName" . }}
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.kmsCoreClientTesting.storage.capacity }}
  storageClassName: {{ .Values.kmsCoreClientTesting.storage.storageClassName }}
{{- end }}
