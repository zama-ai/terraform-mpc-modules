{{- if .Values.kyverno.enabled -}}
apiVersion: kyverno.io/v1
kind: Policy
metadata:
  name: {{ include "kmsCoreName" . }}-mutate-pod
  annotations:
    "helm.sh/hook": "pre-install,pre-upgrade"
    "helm.sh/hook-weight": "-10"
spec:
  validationFailureAction: Audit
  rules:
    - name: replace-service-account-name
      match:
        any:
          - resources:
              kinds:
                - Pod
              names:
                - "{{ include "kmsCoreName" . }}-*"
      preconditions:
        all:
        - key: "{{`{{ request.object.metadata.labels.app }}`}}"
          operator: NotEquals
          value: "kms-core-client-testing"
        - key: "{{`{{ request.object.metadata.labels.app }}`}}"
          operator: NotEquals
          value: "kms-core-client"
        - key: "{{`{{ request.object.metadata.labels.app }}`}}"
          operator: NotEquals
          value: "kms-threshold-init-job"
        - key: "{{`{{ request.object.spec.serviceAccountName }}`}}"
          operator: NotEquals
          value: ""
      mutate:
        patchesJson6902: |-
          - path: "/spec/serviceAccountName"
            op: add
            value: "{{`{{request.object.metadata.name}}`}}"


    - name: replace-configmap-names-init
      match:
        any:
          - resources:
              kinds:
                - Pod
              names:
                - "{{ include "kmsCoreName" . }}-*"
      preconditions:
        all:
        - key: "{{`{{ request.object.metadata.labels.app }}`}}"
          operator: NotEquals
          value: "kms-threshold-init-job"
        - key: "{{`{{ request.object.metadata.labels.app }}`}}"
          operator: NotEquals
          value: "kms-core-client-testing"
        - key: "{{`{{ request.object.metadata.labels.app }}`}}"
          operator: NotEquals
          value: "kms-core-client"
      mutate:
        foreach:
        - list: "request.object.spec.initContainers"
          patchesJson6902: |-
            - op: add
              path: "/spec/initContainers/{{`{{ elementIndex }}`}}/envFrom"
              value:
                - configMapRef:
                    name: "{{`{{request.object.metadata.name}}`}}"

    - name: replace-configmap-names-containers
      match:
        any:
          - resources:
              kinds:
                - Pod
              names:
                - "{{ include "kmsCoreName" . }}-*"
      preconditions:
        all:
        - key: "{{`{{ request.object.metadata.labels.app }}`}}"
          operator: NotEquals
          value: "kms-threshold-init-job"
        - key: "{{`{{ request.object.metadata.labels.app }}`}}"
          operator: NotEquals
          value: "kms-core-client-testing"
        - key: "{{`{{ request.object.metadata.labels.app }}`}}"
          operator: NotEquals
          value: "kms-core-client"
      mutate:
        foreach:
        - list: "request.object.spec.containers"
          patchesJson6902: |-
            - op: add
              path: "/spec/containers/{{`{{ elementIndex }}`}}/envFrom"
              value:
                - configMapRef:
                    name: "{{`{{request.object.metadata.name}}`}}"
{{- end -}}
